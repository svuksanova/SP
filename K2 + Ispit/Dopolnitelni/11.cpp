//gi sodrzhi site standardni biblioteki
#include <bits/stdc++.h>
using namespace std;


//Од тастатура се внесува цел број M, а потоа M низи од цели броеви. За секоја низа прво се внесува
// бројот на елементи во низата N (N<=100), а потоа и елементите на низата.
//Секоја од внесените низи треба да се трансформира според следново правило:
//Ако првиот елемент од низата е позитивен број, тоа значи сите елементи од низата (вклучувајќи го и првиот) да се
//поместат за онолку места во десно, колку што е вредноста на елементот, празнините што ќе настанат во низата да се пополнат со
//елементи со вредност нула.Ако првиот елемент од низата е негативен број, тоа значи сите елементи од низата (вклучувајќи го и првиот)
//да се поместат за онолку места во лево, колку што е вредноста на елементот, празнините што ќе настанат во низата да се пополнат со
//елементи со вредност нула.При поместување на елементите, бројот на елементите во низата останува непроменет.
//На крајот да се испечатат трансформираните низи како и тоа колку од влезните низи останале празни, односно по
//трансформацијата имаат само елементи со вредност нула.Трансформацијата на низите да се реализира во посебна функција.
//Решенијата без користење функција ќе бидат оценети со најмногу 40% од поените.


int transformation(int a[100], int n) {
    int result = 0;

    int tmp[100]={0};

    if (a[0]>0) {
        int positionsRight=a[0];

        for (int j=0; j<n; j++) {
           if (j+positionsRight<n) {
               tmp[j+positionsRight]=a[j];
           }
        }

    }else if (a[0]<0){
        int positionsLeft= -a[0];

        for (int j=0; j<n; j++) {
           if (j-positionsLeft>=0) {
               tmp[j-positionsLeft]=a[j];
           }
        }
    }else {
        for (int j=0; j<n; j++) {
            tmp[j]=a[j];
        }
    }


    for (int i=0; i<n; i++) {
        cout<<tmp[i]<<" ";
    }

    cout<<endl;

    // враќаме 1 ако е целосно нулта, инаку 0
    bool allZero = true;
    for (int i = 0; i < n; i++) {
        if (tmp[i] != 0) { allZero = false; break; }
    }
    return allZero ? 1 : 0;
}

int main() {

    int m;
    cin >> m;

    int emptyCount = 0;

    for (int i = 0; i < m; i++) {
        int n;
        cin>>n;

        int A[100];

        for (int j=0; j<n; j++) {
            cin>>A[j];
        }

        emptyCount += transformation(A, n);
    }

    // број на низи што се целосно нули по трансформацијата
    cout << emptyCount << endl;

    return 0;
}
